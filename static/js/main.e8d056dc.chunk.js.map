{"version":3,"sources":["App.tsx","index.tsx","theme.ts"],"names":["Wrapper","styled","div","Grid","Box","motion","Overlay","overlay","hidden","backgroundColor","visible","exit","Button","button","props","circle","Circle","span","App","useState","id","setId","setCircle","map","n","style","onClick","layoutId","AnimatePresence","variants","initial","animate","width","height","prev","QueryClient","ReactDOM","render","StrictMode","theme","bgColor","textColor","accentColor","cardBgColor","document","getElementById"],"mappings":"+OAIMA,EAAUC,IAAOC,IAAV,yKASPC,EAAOF,IAAOC,IAAV,uIAQJE,EAAMH,YAAOI,IAAOH,IAAdD,CAAH,0OAUHK,EAAUL,YAAOI,IAAOH,IAAdD,CAAH,0JASPM,EAAU,CACdC,OAAQ,CAAEC,gBAAiB,oBAC3BC,QAAS,CAAED,gBAAiB,sBAC5BE,KAAM,CAAEF,gBAAiB,qBAGrBG,EAASX,IAAOY,OAAV,0SAYD,SAACC,GAAD,OACPA,EAAMC,OAAS,UAAY,aAMzBC,EAASf,YAAOI,IAAOY,KAAdhB,CAAH,oIAoDGiB,MA7Cf,WACE,MAAoBC,mBAAwB,MAA5C,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA4BF,oBAAS,GAArC,mBAAOJ,EAAP,KAAeO,EAAf,KAGA,OACE,eAACtB,EAAD,WACE,cAACG,EAAD,UACG,CAAC,EAAG,EAAG,EAAG,GAAGoB,KAAI,SAACC,GAAD,OAChB,eAACpB,EAAD,CACEqB,MAAO,CAAEhB,gBAAiB,4BAC1BiB,QAAS,kBAAML,EAAMG,IAErBG,SAAUH,EAAI,GAJhB,UAMS,IAANA,GAAWT,EAAS,cAACC,EAAD,CAAQW,SAAS,WAAc,KAC7C,IAANH,GAAYT,EAAwC,KAA/B,cAACC,EAAD,CAAQW,SAAS,aAJlCH,QAQX,cAACI,EAAA,EAAD,UACGR,EACC,cAACd,EAAD,CACEuB,SAAUtB,EACVmB,QAAS,kBAAML,EAAM,OACrBS,QAAQ,SACRC,QAAQ,UACRpB,KAAK,OALP,SAOE,cAACP,EAAD,CACEuB,SAAUP,EAAK,GACfK,MAAO,CACLO,MAAO,IACPC,OAAQ,IACRxB,gBAAiB,0BAIrB,OAEN,cAACG,EAAD,CAAQG,OAAQA,EAAQW,QAAS,kBArCTJ,GAAU,SAACY,GAAD,OAAWA,MAqC7C,wBCxGc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAeC,MCXkB,CACrCC,QAAS,UACTC,UAAW,QACXC,YAAa,UACbC,YAAa,QDOT,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.e8d056dc.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useState } from \"react\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #4834d4;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 40vw;\n  height: 30vh;\n  gap: 20px;\n`;\n\nconst Box = styled(motion.div)`\n  border-radius: 60px;\n  width: 100%;\n  height: 300px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overlay = styled(motion.div)`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst overlay = {\n  hidden: { backgroundColor: \"rgba(0, 0, 0, 0)\" },\n  visible: { backgroundColor: \"rgba(0, 0, 0, 0.5)\" },\n  exit: { backgroundColor: \"rgba(0, 0, 0, 0)\" },\n};\n\nconst Button = styled.button<{circle: boolean}>`\n  width: 150px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  border: 0;\n  border-radius: 5px;\n  top: 1200px;\n  font-size: 15px;\n  font-weight: 600;\n  color: ${(props) =>\n    props.circle ? \"#eb4d4b\" : \"#4834d4\"};\n  & {\n    cursor: pointer;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  width: 100px;\n  height: 100px;\n  border-radius: 50px;\n  background-color: rgba(255, 255, 255, 1);\n`;\n\nfunction App() {\n  const [id, setId] = useState<null | number>(null);\n  const [circle, setCircle] = useState(true);\n  const buttonClicked = () => setCircle((prev) => !prev);\n\n  return (\n    <Wrapper>\n      <Grid>\n        {[1, 2, 3, 4].map((n) => (\n          <Box\n            style={{ backgroundColor: \"rgba(255, 255, 255, 0.6)\" }}\n            onClick={() => setId(n)}\n            key={n}\n            layoutId={n + \"\"}\n          >\n            {n === 2 && circle ? <Circle layoutId=\"circle\" /> : null}\n            {n === 3 && !circle ? <Circle layoutId=\"circle\" /> : null}\n          </Box>\n        ))}\n      </Grid>\n      <AnimatePresence>\n        {id ? (\n          <Overlay\n            variants={overlay}\n            onClick={() => setId(null)}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n          >\n            <Box\n              layoutId={id + \"\"}\n              style={{\n                width: 500,\n                height: 500,\n                backgroundColor: \"rgb(255, 255, 255)\",\n              }}\n            />\n          </Overlay>\n        ) : null}\n      </AnimatePresence>\n      <Button circle={circle} onClick={() => buttonClicked()}>Switch</Button>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme } from './theme';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"gray\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"white\",\r\n};"],"sourceRoot":""}